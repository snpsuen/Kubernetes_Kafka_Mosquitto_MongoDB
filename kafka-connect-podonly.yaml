apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - image: confluentinc/cp-kafka-connect
        name: kafka-connect
        ports:
        - containerPort: 8083
        env:
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: "kafka-svc:9092"
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: connect
        - name: CONNECT_REST_PORT
          value: "8083"
        - name: CONNECT_GROUP_ID
          value: compose-connect-group
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: docker-connect-configs
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: docker-connect-offsets
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: docker-connect-status
        - name: CONNECT_KEY_CONVERTER
          value: org.apache.kafka-connect.connect.json.JsonConverter
        - name: CONNECT_VALUE_CONVERTER
          value: org.apache.kafka-connect.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: org.apache.kafka-connect.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: org.apache.kafka-connect.connect.json.JsonConverter
        - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_PLUGIN_PATH
          value: "/usr/share/java,/etc/kafka-connect-connect/java"
        - name: CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR
          value: "1"      
        volumeMounts:
        - name: kafka-connect-data
          mountPath: /etc/kafka-connect/java
      volumes:
      - name: kafka-connect-data
        hostPath:
          path: /var/tmp/kafka-connect/java
          type: DirectoryOrCreate
